# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

def bump_version_code()
  s = File.read("../android/app/build.gradle")
  versionCode = 1948
  s[/versionCode\s+(\d+)/, 1] = (versionCode).to_s
  f = File.new('../android/app/build.gradle', 'w')
  f.write(s)
  f.close
end

default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_API_KEY_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_API_KEY_ISSUER_ID"],
      key_filepath: "ios/AuthKey_2B9KF8VRM5.p8",
    )
    match(type: 'appstore')
    increment_build_number(xcodeproj: "ios/ChristFellowship.xcodeproj")
    build_app(workspace: "ios/ChristFellowship.xcworkspace", scheme: "ChristFellowship Release")
    upload_to_testflight
  end
end

platform :android do

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    bump_version_code
    gradle(task: 'clean', project_dir: 'android')
    gradle(task: 'bundle', build_type: 'Release', project_dir: 'android')

    s = File.read("../android/app/build.gradle")
    package_name = s[/applicationId\s+"([\w+\.]*)"/, 1]

    upload_to_play_store(
      track: "internal",
      skip_upload_apk: true,
      json_key: "android/key.json",
      package_name: package_name
    )
  end
end