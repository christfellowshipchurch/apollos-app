import PushNotification from 'react-native-push-notification'
import { useMutation } from 'react-apollo'
import gql from 'graphql-tag'

const UPDATE_DEVICE_PUSH_ID = gql`
  mutation updateDevicePushId($pushId: String!) {
    updateDevicePushId(pushId: $pushId) @client
  }
`

const configure = ({ pushId, enabled }) => {
  const [updateDevicePushId] = useMutation(UPDATE_DEVICE_PUSH_ID)

  PushNotification.configure({
    // Called when Token is generated (iOS and Android)
    onRegister: function (address) {
      console.log('TOKEN:', address)
      const variables = { enabled: true, bindingType, address: get(address, 'token', '') }

      // Sends the token generated by the device to the updateUserPushSettingsTN endpoint
      updateDevicePushId({ variables })
    },

    // (required) Called when a remote or local notification is opened or received
    onNotification: (notification) => {
      console.log('NOTIFICATION:', notification)

      // TODO : process the notification

      // required on iOS only (see fetchCompletionHandler docs: https://facebook.github.io/react-native/docs/pushnotificationios.html)
      notification.finish(PushNotificationIOS.FetchResult.NoData)
    },

    // ANDROID ONLY: GCM or FCM Sender ID (product_number)
    // senderID: 'YOUR GCM (OR FCM) SENDER ID',

    // IOS ONLY: Permissions to register
    permissions: {
      alert: true,
      badge: true,
      sound: true
    },

    // Should the initial notification be popped automatically
    // default: true
    popInitialNotification: true,

    // does not request permissions automatically
    requestPermissions: false
  })
}

export default configure