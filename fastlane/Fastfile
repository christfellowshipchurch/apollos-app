# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

# ðŸŒŸ This was generated by default
# -------------------------------------------------------------------------
# platform :ios do
#   desc "Push a new beta build to TestFlight"
#   lane :beta do
#     increment_build_number(xcodeproj: "ios/ChristFellowship.xcodeproj")
#     build_app(workspace: "ios/ChristFellowship.xcworkspace", scheme: "ChristFellowship Release")
#     upload_to_testflight
#   end
# end
# -------------------------------------------------------------------------

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    app_store_connect_api_key(
      key_id: "2B9KF8VRM5",
      issuer_id: "543b60f7-5ba8-4f89-871e-821e8c4a40de",
      key_filepath: "ios/AuthKey_2B9KF8VRM5.p8",
    )
    match(type: 'appstore')
    increment_build_number(xcodeproj: "ios/ChristFellowship.xcodeproj")
    build_app(workspace: "ios/ChristFellowship.xcworkspace", scheme: "ChristFellowship Release")
    upload_to_testflight
  end
end

# def product_bundle_id(path:)
#   project = Xcodeproj::Project.open(path)
#   scheme = project.native_targets.first
#   build_configuration = scheme.build_configurations.first
#   build_configuration.build_settings['PRODUCT_BUNDLE_IDENTIFIER']
# end

# before_all do
#   ensure_git_branch
#   ensure_git_status_clean
#   git_pull
# end

# platform :ios do
#   desc "Push a new internal build to TestFlight"
#   lane :deploy do

#     # get project name
#     proj = Dir.glob("../ios/*.xcworkspace")[0][7..-13]

#     identifier = product_bundle_id(path: "../ios/" << proj << ".xcodeproj")

#     app_store_connect_api_key(key_filepath: "ios/apollos.p8", in_house: false)
#     setup_ci
#     match(type: 'appstore', app_identifier: [identifier, "#{identifier}.OneSignalNotificationServiceExtension"], readonly: true)
#     increment_build_number(build_number: number_of_commits, xcodeproj: "ios/" << proj << ".xcodeproj")
#     build_app(workspace: "ios/" << proj << ".xcworkspace", scheme: proj)
#     changelog_from_git_commits
#     testflight
#   end
# end